{"topic":{"0":"N\/A","1":"N\/A","2":"N\/A","3":"N\/A","4":"N\/A","5":"N\/A","6":"N\/A"},"dialog_lvl":{"0":"eli5","1":"eli5","2":"eli5","3":"eli5","4":"eli5","5":"eli5","6":"eli5"},"role":{"0":"Explainee","1":"Explainer","2":"Explainee","3":"Explainer","4":"Explainee","5":"Explainer","6":"Explainee"},"turn_num_tokens":{"0":8,"1":21,"2":82,"3":66,"4":47,"5":11,"6":3},"turn":{"0":"ELI5 - Halting Problem and the Self-Referential Proof","1":"So is the problem with H(x,x) just that both arguments are the same, or is it that it looks at x(x)?","2":"I don't know what looks at \"x(x)\" means.  I don't understand how H(a,b)--which makes sense to me--got transformed to H(x,x) in the subroutine, or why it had to be transformed.  Beyond that, I don't know how H(x,x) would work.  Or how the \"program\" and the \"input\" of H(a,b) could somehow be the same thing (which is what H(x,x) implies to me--if I've misunderstood that, please let me know).  And beyond that, I truly don't know how to process or think about P(P).","3":"Alright, so H(a,b) is when you describe what H does. You have to call them differently because they're different arguments, even if they could be the same.  H(x,x) is then running that routine with *specific* arguments. Essentially, it runs H(a,b), but with a=x and b=x. The cause of the transformation is that we're no longer looking at the definition of H, but at the application of H.","4":"Why does H(x,x) need to be run in the way it does?  And how is H(x,x) even a thing?  I still don't understand how a program and the input to the program (i.e., the two arguments for the subroutine) can be the very same thing.","5":"Hm I might be out of ideas trying to explain it...","6":"Updated the post."}}